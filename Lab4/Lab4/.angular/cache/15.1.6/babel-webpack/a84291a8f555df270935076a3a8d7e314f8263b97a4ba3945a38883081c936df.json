{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction CartComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r1.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 2, item_r1.price));\n  }\n}\nexport class CartComponent {\n  constructor(cartService, formBuilder) {\n    this.cartService = cartService;\n    this.formBuilder = formBuilder;\n    this.items = this.cartService.getItems();\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n  }\n  onSubmit() {\n    // Process checkout data here\n    this.items = this.cartService.clearCart();\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    this.checkoutForm.reset();\n  }\n}\nCartComponent.ɵfac = function CartComponent_Factory(t) {\n  return new (t || CartComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CartComponent,\n  selectors: [[\"app-cart\"]],\n  decls: 17,\n  vars: 2,\n  consts: [[\"routerLink\", \"/shipping\"], [\"class\", \"cart-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"for\", \"address\"], [\"id\", \"address\", \"type\", \"text\", \"formControlName\", \"address\"], [\"type\", \"submit\", 1, \"button\"], [1, \"cart-item\"]],\n  template: function CartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Cart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\")(3, \"a\", 0);\n      i0.ɵɵtext(4, \"Shipping Prices\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, CartComponent_div_5_Template, 6, 4, \"div\", 1);\n      i0.ɵɵelementStart(6, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CartComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n      i0.ɵɵtext(9, \" Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n      i0.ɵɵtext(13, \" Address \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵtext(16, \"Purchase\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.RouterLink, i3.CurrencyPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAMAA,8BAAkD;IAC1CA,YAAgB;IAAAA,iBAAO;IAC7BA,4BAAM;IAAAA,YAA2B;;IAAAA,iBAAO;;;;IADlCA,eAAgB;IAAhBA,4CAAgB;IAChBA,eAA2B;IAA3BA,yDAA2B;;;ACCnC,OAAM,MAAOC,aAAa;EASxBC,YACUC,WAAwB,EACxBC,WAAwB;IADxB,gBAAW,GAAXD,WAAW;IACX,gBAAW,GAAXC,WAAW;IATrB,UAAK,GAAG,IAAI,CAACD,WAAW,CAACE,QAAQ,EAAE;IAEnC,iBAAY,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACpCC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;KACV,CAAC;EAKE;EAEJC,QAAQ;IACN;IACA,IAAI,CAACC,KAAK,GAAG,IAAI,CAACP,WAAW,CAACQ,SAAS,EAAE;IACzCC,OAAO,CAACC,IAAI,CAAC,+BAA+B,EAAE,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC;IACtE,IAAI,CAACD,YAAY,CAACE,KAAK,EAAE;EAC3B;;AAnBWf,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT1BrB,0BAAI;MAAAA,oBAAI;MAAAA,iBAAK;MAEbA,yBAAG;MACyBA,+BAAe;MAAAA,iBAAI;MAG/CA,8DAGM;MAENA,+BAAyD;MAAxBA;QAAA,OAAYsB,cAAU;MAAA,EAAC;MAEtDtB,2BAAK;MAEDA,sBACF;MAAAA,iBAAQ;MACRA,4BAAoD;MACtDA,iBAAM;MAENA,4BAAK;MAEDA,0BACF;MAAAA,iBAAQ;MACRA,4BAA0D;MAC5DA,iBAAM;MAENA,kCAAqC;MAAAA,yBAAQ;MAAAA,iBAAS;;;MArBhBA,eAAQ;MAARA,mCAAQ;MAK1CA,eAA0B;MAA1BA,4CAA0B","names":["i0","CartComponent","constructor","cartService","formBuilder","getItems","group","name","address","onSubmit","items","clearCart","console","warn","checkoutForm","value","reset","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\web-dev-v2\\web-dev-v2\\Lab4\\Lab4\\src\\app\\cart\\cart.component.html","D:\\web-dev-v2\\web-dev-v2\\Lab4\\Lab4\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["<h3>Cart</h3>\n\n<p>\n  <a routerLink=\"/shipping\">Shipping Prices</a>\n</p>\n\n<div class=\"cart-item\" *ngFor=\"let item of items\">\n  <span>{{ item.name }} </span>\n  <span>{{ item.price | currency }}</span>\n</div>\n\n<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\n\n  <div>\n    <label for=\"name\">\n      Name\n    </label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\n  </div>\n\n  <div>\n    <label for=\"address\">\n      Address\n    </label>\n    <input id=\"address\" type=\"text\" formControlName=\"address\">\n  </div>\n\n  <button class=\"button\" type=\"submit\">Purchase</button>\n\n</form>","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent {\n\n  items = this.cartService.getItems();\n\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: FormBuilder,\n  ) { }\n\n  onSubmit(): void {\n    // Process checkout data here\n    this.items = this.cartService.clearCart();\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    this.checkoutForm.reset();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}